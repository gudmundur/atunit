<?xml version="1.0" encoding="UTF-8"?>
<project name="atunit" default="dist">
	
	<property name="version" value="0.8"/>
	

	<property name="ant.build.javac.source" value="1.5"/>
	<property name="ant.build.javac.target" value="1.5"/>
    
	<property name="build.dir" value="${basedir}/build"/>
	<property name="doc.dir" value="${basedir}/doc"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="example.dir" value="${basedir}/example"/>
	<property name="test.dir" value="${basedir}/test"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	
	<path id="compile.classpath">
	    <fileset dir="${lib.dir}" includes="**/*.jar" excludes="build/**/*.jar"/>
		<pathelement location="${build.dir}/classes"/>
	</path>
	
	<path id="build.classpath">
		<fileset dir="${lib.dir}/build" includes="**/*.jar"/>
		<path refid="compile.classpath"/>
	</path>
	

	<taskdef resource="svntask.properties" classpathref="build.classpath"/>
	
    <target name="compile" description="compile source">
        <mkdir dir="${build.dir}/classes"/>
    	<mkdir dir="${build.dir}/testclasses"/>
    	<javac srcdir="${src.dir}" debug="on" destdir="${build.dir}/classes">
    		<classpath refid="compile.classpath"/>
    	</javac>
    	<javac srcdir="${example.dir}" debug="on" destdir="${build.dir}/classes">
    		<classpath refid="compile.classpath"/>
    	</javac>
    	<copy todir="${build.dir}/testclasses">
    	    		<fileset dir="${example.dir}" includes="**/*.xml"/>
    	</copy>
    	<javac srcdir="${test.dir}" debug="on" destdir="${build.dir}/testclasses">
    		<classpath refid="compile.classpath"/>
    	</javac>
    	<copy todir="${build.dir}/testclasses">
    		<fileset dir="${test.dir}" includes="**/*.xml"/>
    	</copy>
    </target>
	
	
	<target name="docs" depends="compile">


		<javadoc 
			access="public" 
			author="true" 
			classpathref="build.classpath" 
			destdir="${doc.dir}/api" 
			nodeprecated="false" 
			nodeprecatedlist="false" 
			noindex="false" 
			nonavbar="false" 
			notree="false" 
			source="1.5" 
			sourcepath="${src.dir}"
			splitindex="true" 
			use="true" 
			version="true">
			<link href="http://junit.sourceforge.net/javadoc/"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
			<arg value="-notimestamp"/>
		</javadoc>
		
		<taskdef name="java2html"
		    classname="de.java2html.anttasks.Java2HtmlTask"
		    classpathref="build.classpath"
		/>
		<java2html 
			srcdir="${example.dir}" 
			destdir="${doc.dir}/api"
			outputFormat="xhtml11"
			tabs="4"
			addLineAnchors="true"/>
	</target>

	<target name="jar" depends="compile,test" description="package into jars">
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpathref="build.classpath"/>
		<jarjar destfile="${build.dir}/${ant.project.name}-${version}.jar" basedir="${build.dir}/classes">
			<zipfileset src="${lib.dir}/core/google-collections/google-collect-snapshot-20071022.jar"/>
			<rule pattern="com.google.common.**" result="atunit.lib.@0"/>
		</jarjar>
	</target>
	
	<target name="dist" depends="clean,jar,docs"/>
	
	<target name="test" depends="compile" description="execute unit tests">
		<delete dir="${build.dir}/testoutput"/>
		<mkdir dir="${build.dir}/testoutput"/>
		<junit printsummary="withOutAndErr" haltonfailure="true">
			<formatter type="plain"/>
			<classpath>
				<path refid="compile.classpath"/>
				<path location="${build.dir}/testclasses"/>
			</classpath>
			<batchtest todir="${build.dir}/testoutput">
				<fileset dir="${example.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
    <target name="clean" description="clean up build artifacts">
    	<delete dir="${build.dir}"/>
    	<svn>
    		<revert dir="${doc.dir}" recurse="true"/>
    	</svn>
    	<delete>
			<fileset dir="${doc.dir}">
				<type type="file"/>
				<exclude name="**/.svn/**"/>
			</fileset>
    	</delete>
    </target>
	
</project>
